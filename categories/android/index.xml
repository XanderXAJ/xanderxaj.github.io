<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Android on Forged Defiance</title>
    <link>/categories/android/</link>
    <description>Recent content in Android on Forged Defiance</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-gb</language>
    <lastBuildDate>Sat, 01 Jun 2013 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/categories/android/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Searchlight 1.6</title>
      <link>/post/searchlight-1-6-2/</link>
      <pubDate>Sat, 01 Jun 2013 00:00:00 +0000</pubDate>
      
      <guid>/post/searchlight-1-6-2/</guid>
      <description>I&amp;rsquo;ve released another update to Searchlight!
This one contains some experimental code for devices that use the CyanogenMod SysFS interface to toggle their light. Naturally, given it&amp;rsquo;s experimental, it might not work. :-) That&amp;rsquo;s because I don&amp;rsquo;t have any devices that actually make use of it.
Get in touch via Google Play or the contact page if you have problems, or just want to give me a good word!
As always, you can download the update via Google Play or directly.</description>
    </item>
    
    <item>
      <title>Searchlight 1.5</title>
      <link>/post/searchlight-1-5/</link>
      <pubDate>Sun, 12 May 2013 00:00:00 +0000</pubDate>
      
      <guid>/post/searchlight-1-5/</guid>
      <description>Looks like I forgot to write about this when I released it in February, but Searchlight 1.5 is out!
The big thing this update adds is a widget that can be added to your launcher or to your lock screen on 4.2+ devices. That means you can toggle the light without unlocking the device!
As always you can download it from Google Play and directly from this site.
Also, for the sake of completeness, since I never got around to writing about version 1.4, here&amp;rsquo;s the download for 1.4.</description>
    </item>
    
    <item>
      <title>Searchlight 1.3 is out!</title>
      <link>/post/searchlight-1-3-is-out/</link>
      <pubDate>Tue, 28 Aug 2012 00:00:00 +0000</pubDate>
      
      <guid>/post/searchlight-1-3-is-out/</guid>
      <description>It&amp;rsquo;s been 8 months since the previous release (and I know I skipped even mentioning the previous release here!), but it&amp;rsquo;s worth it as I&amp;rsquo;ve tackled a rather serious bug that would cause the wakelock to be held even after the torch has been switched off.
If you didn&amp;rsquo;t get a word of what I just said, it means that Searchlight will no longer use battery power unnecessarily. Yay!
Download it direct or from Google Play.</description>
    </item>
    
    <item>
      <title>Searchlight 1.1 released</title>
      <link>/post/searchlight-1-1-released/</link>
      <pubDate>Fri, 26 Aug 2011 00:00:00 +0000</pubDate>
      
      <guid>/post/searchlight-1-1-released/</guid>
      <description>Searchlight, my application for lighting up your world (or at least a few metres in front of you) using your Android device&amp;rsquo;s LED has been updated to 1.1.
This update brings better behaviour on HTC Sense devices, where the screen is kept on (as this is necessary to keep the device&amp;rsquo;s light switched on). In addition, when the screen is switched off (manually) and switched on again, it can switch on the light again; previously it didn&amp;rsquo;t switch the light back on, yet still ran the service. Oops.
Get the update through the Android Market, or download the APK right here.</description>
    </item>
    
    <item>
      <title>Searchlight: An Android LED torch powered by the Search button</title>
      <link>/post/searchlight-an-android-led-torch-powered-by-the-search-button/</link>
      <pubDate>Mon, 04 Jul 2011 00:00:00 +0000</pubDate>
      
      <guid>/post/searchlight-an-android-led-torch-powered-by-the-search-button/</guid>
      <description>In case there aren&amp;rsquo;t enough of them out there, I&amp;rsquo;ve decided to chip in my own effort on the Android LED torch scene.
In a sort of sequel to my first Android app Torchure, I have just released Searchlight on to the Android Market.
The unique thing about this flashlight is that it&amp;rsquo;s activated by long-pressing the Search button. Each time you do this, the LED will toggle on or off. This means that (nearly) regardless of what app you&amp;rsquo;re in, you can toggle the LED.
You can even switch off the screen to save your battery for the LED. Just note that on most devices the Search button will be disabled while the screen is off, so you&amp;rsquo;ll probably have to switch on the screen, unlock it, then hold the Search button.
When you long-press the Search button for the first time, you&amp;rsquo;ll probably get a selection of different apps for you to choose from. Just select Searchlight off the list to toggle the LED. Check the &amp;ldquo;Use by default for this action&amp;rdquo; checkbox to make sure that dialog doesn&amp;rsquo;t appear in future.
If you want that Search selection to appear again, go to Settings &amp;gt; Applications &amp;gt; Manage applications &amp;gt; Searchlight &amp;gt; &amp;ldquo;Clear defaults&amp;rdquo; button. Then hold Search again and make a new selection. It will also reappear when the list of actions changes, for example you install or uninstall an app that has global search functionality.
There are a couple of caveats.
 It&amp;rsquo;ll only work on devices that implement the standard camera flash interface introduced by Froyo. If it doesn&amp;rsquo;t work on yours, contact me and I&amp;rsquo;ll see if I can add support for your device or system software. Don&amp;rsquo;t run Searchlight at the same time as another app using the camera, such as Camera, Barcode Scanner or Shopper. Things will go badly, trust me.  It&amp;rsquo;s available on the Android Market for any Android device with a camera and flash running 2.2 (Froyo) and above. This first version is only a smidge over 11KB and requires no outrageous permissions (just camera for obvious reasons, and wake lock to keep the LED on when the screen is off).
Alternatively, if you prefer not to use the Market, you can download it here.</description>
    </item>
    
    <item>
      <title>Making Ringtones Loop on Android</title>
      <link>/post/making-ringtones-loop-on-android/</link>
      <pubDate>Wed, 25 Aug 2010 00:00:00 +0000</pubDate>
      
      <guid>/post/making-ringtones-loop-on-android/</guid>
      <description>Update 2012-01-06: ICS appears to have a bug where the end of the file is chopped off, so ringtones do not loop properly. If I find or hear a solution I&amp;rsquo;ll update again!
Update 2010-11-09: Added clarification on why I suggest having a short (sub-10 second) ringtone. You want it to loop, right? =P
Following on from my previous articles on ringtones, I&amp;rsquo;ve finally worked out how to make ringtones loop seamlessly in Android.
My problem before was that, despite the fact I made an OGG that should loop properly, when played back on Android, it didn&amp;rsquo;t. Turns out, there&amp;rsquo;s a little piece of metadata you need to add to the tags in the ringtone to make it loop properly.
Using your favourite tag editor (I used foobar2000 on Windows), add a tag/field called &amp;ldquo;ANDROID_LOOP&amp;rdquo;, and set it to &amp;ldquo;true&amp;rdquo;.
Please note that the file itself will also need to loop properly for things to work out. That means that if you&amp;rsquo;re basing your ringtone on a longer piece of music, it needs to be trimmed down to 10 or fewer seconds and trimmed in such a way that the audio sounds like it goes on forever when played from beginning to end repeatedly.
The file doesn&amp;rsquo;t have to be less than 10 seconds, but I figure you&amp;rsquo;re reading this because you want to make a file that loops! Most carriers will stop ringing your phone after 15 to 30 seconds and pass the call to voicemail. This depends on the carrier, your preferences (if you can change how long voicemail waits at all), and whether or not you have voicemail enabled!
Also, you need to use a format that doesn&amp;rsquo;t add silence to the end of the track. OGG (which I recommend), FLAC and AAC should all work fine. I do not know if Android reads LAME&amp;rsquo;s metadata with allows MP3s encoded by it to loop. MP3s encoded with other encoders will probably add silence and as such will not loop perfectly.
Have fun with this!</description>
    </item>
    
    <item>
      <title>Torchure 1.1.1 Released</title>
      <link>/post/torchure-1-1-1-released/</link>
      <pubDate>Wed, 21 Jul 2010 00:00:00 +0000</pubDate>
      
      <guid>/post/torchure-1-1-1-released/</guid>
      <description>I&amp;rsquo;ve uploaded a minor bugfix release for Torchure to the Android Market, which fixes the buggy systems preference not taking effect.
Don&amp;rsquo;t remind me of the irony…</description>
    </item>
    
    <item>
      <title>Torchure 1.1 Released</title>
      <link>/post/torchure-1-1-released/</link>
      <pubDate>Sun, 18 Jul 2010 00:00:00 +0000</pubDate>
      
      <guid>/post/torchure-1-1-released/</guid>
      <description>My first Android Market update! Hope this goes well.
This update includes:
 A new colour! You can change the screen to red, to help preserve night vision. This makes the torch less effective, mind.  To switch colour, either swipe sideways on the screen or use the new menu option!  New preferences have been added to let you choose what colour you want on starting Torchure: white, red, or whatever you last used. The Lock Brightness preference has been fixed, and now actually works. (Locking via pressing the trackball or the menu option worked fine) Added a new Hints &amp;amp; Tips screen, to highlight the little things I can&amp;rsquo;t fit anywhere else!  </description>
    </item>
    
    <item>
      <title>Torchure for Android</title>
      <link>/post/torchure-for-android/</link>
      <pubDate>Wed, 14 Jul 2010 00:00:00 +0000</pubDate>
      
      <guid>/post/torchure-for-android/</guid>
      <description>Ever found yourself in need of a torch, but only had your phone handy? Look no further!
Torchure (for Android) is a pretty simple application. It turns the screen white and, as default, whacks up the backlight to maximum. I did say simple, didn&amp;rsquo;t I?
However, it also lets you change that backlight brightness (useful if, say, you&amp;rsquo;ve been to a particularly wild party and you need to step over some people without waking/blinding them) and lock it so you don&amp;rsquo;t go accidentally changing it. Torchure is designed to work for you, not make you work for it!
It marks my first release on to the Android Market, and it requires no permissions whatsoever — it is a torch, after all.
Even though Google is telling me this link will not work, go check out Torchure on the market now!
And if you&amp;rsquo;re not using an Android handset, AndroidZoom has you covered until Google release their updated Market.
NB: The link does work (on Android 2.2). Guess they forgot to update the documentation.</description>
    </item>
    
    <item>
      <title>Ogg Vorbis Encoder for Windows</title>
      <link>/post/ogg-vorbis-encoder-for-windows/</link>
      <pubDate>Sun, 08 Nov 2009 00:00:00 +0000</pubDate>
      
      <guid>/post/ogg-vorbis-encoder-for-windows/</guid>
      <description>I not so long ago made a post about using Ogg Vorbis for Ringtones on Android, as it considerably reduces the lag between getting a phone call and the phone actually playing the ringtone. The same goes for music on the device–it just starts playing quicker.
Anyway, just now I realised that I didn&amp;rsquo;t link to any encoders for it. So if anyone wondered what I used to accomplish the task, they&amp;rsquo;d be stuck!
So here&amp;rsquo;s a quick update to fill in in the gaps:
If you&amp;rsquo;re wanting to just convert some files you already have into Ogg Vorbis, I&amp;rsquo;d recommend oggdropXPd. Open the program, right-click on the &amp;ldquo;dropbox&amp;rdquo; that appears to configure it, then when it&amp;rsquo;s all done, drag and drop the files you want to convert onto the dropbox, and wait! It works fine under Windows Vista (32-bit) and Windows 7 (64-bit).
If you&amp;rsquo;re wanting to both edit a music track into a short ringtone and convert to Ogg Vorbis, Audacity did the job for me. It&amp;rsquo;s open-source and supports a number of file types (including MP3 if you download a separate plug-in), so hopefully it&amp;rsquo;ll work for you too. Again, it works fine in Windows Vista (32-bit) and Windows 7 (64-bit).
The settings I used for the Ogg Vorbis files on my G1 where 128kbps CBR. You don&amp;rsquo;t need much quality because the phone&amp;rsquo;s speaker isn&amp;rsquo;t exactly an orchestra, and I used Constant Bitrate under the assumption it would take less CPU to decode. If you know otherwise, please let me know!</description>
    </item>
    
    <item>
      <title>Use Ogg Vorbis for Lag-free Ringtones on Android</title>
      <link>/post/use-ogg-vorbis-for-lag-free-ringtones-on-android/</link>
      <pubDate>Mon, 21 Sep 2009 00:00:00 +0000</pubDate>
      
      <guid>/post/use-ogg-vorbis-for-lag-free-ringtones-on-android/</guid>
      <description>Update 2010-06-21: If you want to use custom ringtones in the first place, install Rings Extended from the Android Market, then go to Home  Settings  Sound &amp; display  Phone ringtone. When it asks which application you want to use, select Rings Extended, and check the checkbox so that it doesn&#39;t ask you again.  This will work anywhere any application asks for you to pick a ringtone, assuming it asks via a standard means!  I&#39;ve also written another article detailing how to convert your music in to Ogg Vorbis files.  Why, do I hear you cry?
Simple really, here&amp;rsquo;s the story: when I first transferred various files to my phone for use as ringtones (one each for calls, texts, e-mails…) I used MP3s. Thanks to the Rings Extended application in the marketplace I had no trouble in using them.
But one thing struck me as odd whenever I got a call (or text etc.); lag. If I were to get a call right now, the phone would vibrate, the screen would turn black, and then a couple of seconds later the contact details show and my ringtone starts playing. Not ideal.
So I decided to try something. I set one of the standard ringtones that came with the phone as the current ringtone, and tried again. This time the phone started vibrating and played the tone at the same time.
After that I had to figure out what format they used, since I had no idea where the files could be and what format they were. I reasoned that Ogg Vorbis would be the format they&amp;rsquo;d use — an open-source OS with open-source ringtones. Makes sense, right?
So I tried it: I converted those same ringtones I started out with to 128kbps CBR Vorbis files. 128kbps because I thought that a higher bitrate would lag the phone out (plus you wouldn&amp;rsquo;t hear a quality difference from the speaker anyway), and CBR because I thought it would be easier for the decoder to work with, though I have no evidence to back this up.
Voilà! Suddenly my ringtones loaded a lot quicker, and no longer did I get vibrations with no accompanying ringtone (unless it was set to vibrate only!).
I haven&amp;rsquo;t tested other settings on the Vorbis encoder (different bitrates, VBR etc.), nor have I tested other formats aside from MP3 and Ogg.
Hope this is of help to someone that actually cares about this stuff.</description>
    </item>
    
    <item>
      <title>Changing GPRS, MMS and Access Point Settings on Android</title>
      <link>/post/changing-gprs-mms-and-access-point-settings-on-android/</link>
      <pubDate>Fri, 10 Jul 2009 00:00:00 +0000</pubDate>
      
      <guid>/post/changing-gprs-mms-and-access-point-settings-on-android/</guid>
      <description>I feel kind of silly for falling foul of this, but I guess it&amp;rsquo;s just a case of going against what you&amp;rsquo;re used to.
I was looking for a way to check on my MMS settings on Android. On just about every other phone I&amp;rsquo;ve used it&amp;rsquo;s been a submenu of the messaging application, so that&amp;rsquo;s where I went — except I couldn&amp;rsquo;t find anything pertaining to access point settings! I mean, if one phone does it one way, all phones do it that way, right? Right?
Wrong. Turns out Android hides the settings in — guess what — its Settings menus! That&amp;rsquo;s good, because it&amp;rsquo;s centralised. It makes sense when you think about it. Honest.
Anyway, to find these elusive settings, just follow these instructions:
 Go to the Home screen. Press Menu. Select Settings. Select Wireless controls. Select Mobile network settings. Select Access Point Names. Finally, select an access point to edit, or press Menu to create a new APN or reset to the defaults that shipped with the phone.  Have fun with changing access point settings! Mmm.</description>
    </item>
    
    <item>
      <title>Fix Superuser Permissions Hanging on Android</title>
      <link>/post/fix-superuser-permissions-hanging-on-android/</link>
      <pubDate>Sun, 14 Jun 2009 00:00:00 +0000</pubDate>
      
      <guid>/post/fix-superuser-permissions-hanging-on-android/</guid>
      <description>Update 2010-03-04: Added another potential solution courtesy of Blazt in the comments. Thanks!
So, you have a phone with root permissions? Finding whenever a program requests root permissions the Superuser Permissions program hangs (usually with a black screen or even a force close) at the &amp;ldquo;SU request&amp;rdquo; screen?
Fortunately there are a couple of things you can try, which I&amp;rsquo;ll detail for you.
First, make sure USB Debugging is enabled. To do that:
 Press the Home button. Press the Menu button. Select Settings &amp;gt; Applications &amp;gt; Development. Make sure that USB Debugging is checked. If not, check it.  If that fixes your problem, you are done! If not, then you can try clearing the Superuser Permissions data. This is just any options you have set within the app and whether or not particular apps are always allowed or blocked — you won&amp;rsquo;t lose any of your other data, and it&amp;rsquo;s easy to allow/deny stuff again.
To clear the data:
 Press the Home button. Press the Menu button. Select Settings &amp;gt; Applications &amp;gt; Manage applications. Find Superuser Permissions on the list. Tap it. Tap &amp;ldquo;Clear data&amp;rdquo; and &amp;ldquo;Clear cache&amp;rdquo; if they&amp;rsquo;re enabled.  This should prevent any hangs with Superuser Permissions in the future.
This works on the HTC Dream (T-Mobile G1) with the 1.5 and 1.6 firmwares, and presumably other Android devices with the Superuser Permissions app.</description>
    </item>
    
    <item>
      <title>Unlock Android Device Using PUK Code</title>
      <link>/post/unlock-android-device-using-puk-code/</link>
      <pubDate>Fri, 12 Jun 2009 00:00:00 +0000</pubDate>
      
      <guid>/post/unlock-android-device-using-puk-code/</guid>
      <description>If you&amp;rsquo;ve ever got your PIN code wrong too many times and got your SIM locked, you were probably as surprised as I was when Android gives you no option to unlock the phone! Fortunately there&amp;rsquo;s an answer.
To unlock your Android-based device go to the Emergency Call screen and enter in the following (replace the angled brackets with the appropriate info):
**05*«PUK Code»*«Your new pin»*«Confirm your new pin»# So for example:
**05*12345678*9090*9090# As a side effect this should work on any SIM-containing device at a screen where you can enter phone numbers, not just devices running the Android OS. As of writing, Android-based devices are the HTC Dream (T-Mobile G1) and HTC Magic.
And make sure you keep your PUK code secret — anyone can override your PIN with their own using it!
Thanks to theWeir for posting that solution.
http://androidcommunity.com/forums/99706-post6.html  </description>
    </item>
    
  </channel>
</rss>